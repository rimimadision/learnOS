
Allocating common symbols
Common symbol       size              file

kbd_buf             0x6c              build/keyboard.o
thread_ready_list   0x10              build/thread.o
thread_all_list     0x10              build/thread.o
k_block_desc        0xa8              build/memory.o
k_v_pool            0xc               build/memory.o
idle_thread         0x4               build/thread.o
intr_name           0x204             build/interrupt.o
main_thread         0x4               build/thread.o
syscall_table       0x80              build/syscall-init.o
total_ticks         0x4               build/timer.o
k_p_pool            0x2c              build/memory.o
u_p_pool            0x2c              build/memory.o
idt_table           0x204             build/interrupt.o
pid_lock            0x1c              build/thread.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/stdio.o
LOAD build/syscall-init.o
LOAD build/syscall.o
LOAD build/stdio-kernel.o
LOAD build/keyboard.o
LOAD build/ioqueue.o
LOAD build/process.o
LOAD build/console.o
LOAD build/tss.o
LOAD build/sync.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/timer.o
LOAD build/interrupt.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/string.o
LOAD build/debug.o
LOAD build/switch.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048074                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048074        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048074        0x0
 *(.rel.plt)
                0x0000000008048074                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 build/main.o
                0x0000000008048074                PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x0000000008048080        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 build/main.o

.text           0x00000000c0001500     0x40c5
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x2eb build/main.o
                0x00000000c0001500                main
                0x00000000c000153d                k_thread_a
                0x00000000c0001610                k_thread_b
                0x00000000c00016e3                u_prog_a
                0x00000000c0001767                u_prog_b
 .text          0x00000000c00017eb       0x50 build/init.o
                0x00000000c00017eb                init_all
 .text          0x00000000c000183b      0x27e build/stdio.o
                0x00000000c00018bc                vsprintf
                0x00000000c0001a2e                printf
                0x00000000c0001a89                sprintf
 .text          0x00000000c0001ab9       0x85 build/syscall-init.o
                0x00000000c0001ab9                sys_getpid
                0x00000000c0001aca                sys_write
                0x00000000c0001aee                syscall_init
 .text          0x00000000c0001b3e       0x6f build/syscall.o
                0x00000000c0001b3e                getpid
                0x00000000c0001b53                write
                0x00000000c0001b72                malloc
                0x00000000c0001b91                free
 .text          0x00000000c0001bad       0x5b build/stdio-kernel.o
                0x00000000c0001bad                printk
 .text          0x00000000c0001c08      0x2cc build/keyboard.o
                0x00000000c0001e9a                keyboard_init
 .text          0x00000000c0001ed4      0x2e4 build/ioqueue.o
                0x00000000c0001ed4                ioqueue_init
                0x00000000c0001f2c                ioq_full
                0x00000000c0001f79                ioq_empty
                0x00000000c0002045                ioq_getchar
                0x00000000c00020fd                ioq_putchar
 .text          0x00000000c00021b8      0x35c build/process.o
                0x00000000c00021b8                start_process
                0x00000000c00022b6                page_dir_activate
                0x00000000c00022ea                process_activate
                0x00000000c0002337                create_page_dir
                0x00000000c00023af                create_user_vaddr_bitmap
                0x00000000c00023fa                process_execute
 .text          0x00000000c0002514       0xb0 build/console.o
                0x00000000c0002514                console_init
                0x00000000c000252c                console_acquire
                0x00000000c0002544                console_release
                0x00000000c000255c                console_put_str
                0x00000000c000257c                console_put_char
                0x00000000c00025a4                console_put_int
 .text          0x00000000c00025c4      0x188 build/tss.o
                0x00000000c00025c4                update_tss_esp
                0x00000000c0002643                tss_init
 .text          0x00000000c000274c      0x2af build/sync.o
                0x00000000c0002774                lock_init
                0x00000000c0002923                lock_acquire
                0x00000000c0002999                lock_release
 .text          0x00000000c00029fb      0x64c build/thread.o
                0x00000000c0002a12                get_cur_thread_pcb
                0x00000000c0002a7d                thread_create
                0x00000000c0002aed                init_thread
                0x00000000c0002b91                thread_start
                0x00000000c0002ce3                schedule
                0x00000000c0002df1                thread_init
                0x00000000c0002e69                thread_block
                0x00000000c0002ecb                thread_unblock
                0x00000000c0002fc4                thread_yield
 .text          0x00000000c0003047      0x1d4 build/list.o
                0x00000000c0003047                list_init
                0x00000000c0003074                list_insert_before
                0x00000000c00030b8                list_push
                0x00000000c00030d5                list_append
                0x00000000c00030f2                list_remove
                0x00000000c000312b                list_pop
                0x00000000c000314d                list_empty
                0x00000000c0003166                list_len
                0x00000000c000319a                list_traversal
                0x00000000c00031e0                elem_find
 .text          0x00000000c000321b      0x1d5 build/timer.o
                0x00000000c00032bd                timer_init
                0x00000000c00033a6                mtime_sleep
 .text          0x00000000c00033f0      0x471 build/interrupt.o
                0x00000000c0003710                idt_init
                0x00000000c000377a                intr_enable
                0x00000000c0003794                intr_disable
                0x00000000c00037ae                intr_set_status
                0x00000000c00037c8                intr_get_status
                0x00000000c0003845                register_handler
 *fill*         0x00000000c0003861        0xf 
 .text          0x00000000c0003870      0x565 build/kernel.o
                0x00000000c0003870                intr_exit
                0x00000000c0003db1                syscall_handler
 *fill*         0x00000000c0003dd5        0xb 
 .text          0x00000000c0003de0      0x149 build/print.o
                0x00000000c0003de0                put_str
                0x00000000c0003dfe                put_char
                0x00000000c0003ecb                put_int
 .text          0x00000000c0003f29     0x1023 build/memory.o
                0x00000000c00040f9                block_desc_init
                0x00000000c0004189                mem_init
                0x00000000c0004349                pte_ptr
                0x00000000c0004370                pde_ptr
                0x00000000c00043cf                pfree
                0x00000000c000454a                malloc_page
                0x00000000c00046b1                mfree_page
                0x00000000c000486f                get_kernel_pages
                0x00000000c00048ca                get_user_pages
                0x00000000c0004925                get_a_page
                0x00000000c0004a7f                addr_v2p
                0x00000000c0004aac                sys_malloc
                0x00000000c0004dbd                sys_free
 .text          0x00000000c0004f4c      0x21d build/bitmap.o
                0x00000000c0004f4c                bitmap_init
                0x00000000c0004f6e                bitmap_test_bit
                0x00000000c0004fac                bitmap_scan
                0x00000000c00050bb                bitmap_set
 .text          0x00000000c0005169      0x3a1 build/string.o
                0x00000000c0005169                memset
                0x00000000c00051b9                memcpy
                0x00000000c0005217                memcmp
                0x00000000c000528b                strcpy
                0x00000000c00052de                strlen
                0x00000000c0005326                strcmp
                0x00000000c0005393                strchr
                0x00000000c00053e8                strrchr
                0x00000000c0005443                strcat
                0x00000000c00054a9                strchrs
 .text          0x00000000c000550a       0xa6 build/debug.o
                0x00000000c000550a                panic_spin
 .text          0x00000000c00055b0       0x15 build/switch.o
                0x00000000c00055b0                switch_to
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                0x00000000c00055c5                PROVIDE (__etext, .)
                0x00000000c00055c5                PROVIDE (_etext, .)
                0x00000000c00055c5                PROVIDE (etext, .)

.rodata         0x00000000c00055c8      0xf5b
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c00055c8       0x25 build/main.o
 .rodata        0x00000000c00055ed       0x1a build/init.o
 .rodata        0x00000000c0005607       0x27 build/syscall-init.o
 .rodata        0x00000000c000562e       0x36 build/keyboard.o
 .rodata        0x00000000c0005664       0xa8 build/ioqueue.o
 .rodata        0x00000000c000570c       0xe0 build/process.o
 .rodata        0x00000000c00057ec       0x27 build/tss.o
 *fill*         0x00000000c0005813        0x1 
 .rodata        0x00000000c0005814      0x121 build/sync.o
 *fill*         0x00000000c0005935        0x3 
 .rodata        0x00000000c0005938      0x2f1 build/thread.o
 *fill*         0x00000000c0005c29        0x3 
 .rodata        0x00000000c0005c2c       0x8c build/timer.o
 .rodata        0x00000000c0005cb8      0x30d build/interrupt.o
 *fill*         0x00000000c0005fc5        0x3 
 .rodata        0x00000000c0005fc8      0x3cd build/memory.o
 *fill*         0x00000000c0006395        0x3 
 .rodata        0x00000000c0006398       0x67 build/bitmap.o
 *fill*         0x00000000c00063ff        0x1 
 .rodata        0x00000000c0006400       0xe4 build/string.o
 .rodata        0x00000000c00064e4       0x3f build/debug.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x00000000c0006524     0x1040
 *(.eh_frame)
 .eh_frame      0x00000000c0006524       0xac build/main.o
 .eh_frame      0x00000000c00065d0       0x20 build/init.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000c00065f0       0x84 build/stdio.o
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0006674       0x60 build/syscall-init.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c00066d4       0x8c build/syscall.o
                                         0xa4 (size before relaxing)
 .eh_frame      0x00000000c0006760       0x24 build/stdio-kernel.o
                                         0x3c (size before relaxing)
 .eh_frame      0x00000000c0006784       0x60 build/keyboard.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000c00067e4      0x100 build/ioqueue.o
                                        0x118 (size before relaxing)
 .eh_frame      0x00000000c00068e4       0xc0 build/process.o
                                         0xd8 (size before relaxing)
 .eh_frame      0x00000000c00069a4       0xc0 build/console.o
                                         0xd8 (size before relaxing)
 .eh_frame      0x00000000c0006a64       0x64 build/tss.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000c0006ac8       0xc8 build/sync.o
                                         0xe0 (size before relaxing)
 .eh_frame      0x00000000c0006b90      0x19c build/thread.o
                                        0x1b4 (size before relaxing)
 .eh_frame      0x00000000c0006d2c      0x140 build/list.o
                                        0x158 (size before relaxing)
 .eh_frame      0x00000000c0006e6c       0xcc build/timer.o
                                         0xe4 (size before relaxing)
 .eh_frame      0x00000000c0006f38      0x1a8 build/interrupt.o
                                        0x1c0 (size before relaxing)
 .eh_frame      0x00000000c00070e0      0x2a0 build/memory.o
                                        0x2b8 (size before relaxing)
 .eh_frame      0x00000000c0007380       0x88 build/bitmap.o
                                         0xa0 (size before relaxing)
 .eh_frame      0x00000000c0007408      0x140 build/string.o
                                        0x158 (size before relaxing)
 .eh_frame      0x00000000c0007548       0x1c build/debug.o
                                         0x34 (size before relaxing)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0007564                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x00000000c0008000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0008000        0x0
                0x00000000c0008000                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x00000000c0008000                PROVIDE (__preinit_array_end, .)

.init_array     0x00000000c0008000        0x0
                0x00000000c0008000                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array)
                0x00000000c0008000                PROVIDE (__init_array_end, .)

.fini_array     0x00000000c0008000        0x0
                0x00000000c0008000                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*))
 *(.fini_array)
                0x00000000c0008000                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x00000000c0008000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0008000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 build/main.o

.data           0x00000000c0008000      0x140
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c0008000        0x0 build/main.o
 .data          0x00000000c0008000        0x0 build/init.o
 .data          0x00000000c0008000        0x0 build/stdio.o
 .data          0x00000000c0008000        0x0 build/syscall-init.o
 .data          0x00000000c0008000        0x0 build/syscall.o
 .data          0x00000000c0008000        0x0 build/stdio-kernel.o
 .data          0x00000000c0008000       0x76 build/keyboard.o
 .data          0x00000000c0008076        0x0 build/ioqueue.o
 .data          0x00000000c0008076        0x0 build/process.o
 .data          0x00000000c0008076        0x0 build/console.o
 .data          0x00000000c0008076        0x0 build/tss.o
 .data          0x00000000c0008076        0x0 build/sync.o
 .data          0x00000000c0008076        0x0 build/thread.o
 .data          0x00000000c0008076        0x0 build/list.o
 .data          0x00000000c0008076        0x0 build/timer.o
 .data          0x00000000c0008076        0x0 build/interrupt.o
 *fill*         0x00000000c0008076        0x2 
 .data          0x00000000c0008078       0xc0 build/kernel.o
                0x00000000c0008078                intr_entry_table
 .data          0x00000000c0008138        0x8 build/print.o
 .data          0x00000000c0008140        0x0 build/memory.o
 .data          0x00000000c0008140        0x0 build/bitmap.o
 .data          0x00000000c0008140        0x0 build/string.o
 .data          0x00000000c0008140        0x0 build/debug.o

.data1
 *(.data1)
                0x00000000c0008140                _edata = .
                0x00000000c0008140                PROVIDE (edata, .)
                0x00000000c0008140                . = .
                0x00000000c0008140                __bss_start = .

.bss            0x00000000c0008140      0xb8c
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c0008140        0x8 build/main.o
                0x00000000c0008140                pid_a
                0x00000000c0008144                pid_b
 .bss           0x00000000c0008148        0x0 build/init.o
 .bss           0x00000000c0008148        0x0 build/stdio.o
 .bss           0x00000000c0008148        0x0 build/syscall-init.o
 .bss           0x00000000c0008148        0x0 build/syscall.o
 .bss           0x00000000c0008148        0x0 build/stdio-kernel.o
 .bss           0x00000000c0008148       0x14 build/keyboard.o
 .bss           0x00000000c000815c        0x0 build/ioqueue.o
 .bss           0x00000000c000815c        0x0 build/process.o
 .bss           0x00000000c000815c       0x1c build/console.o
 *fill*         0x00000000c0008178        0x8 
 .bss           0x00000000c0008180       0x6c build/tss.o
 .bss           0x00000000c00081ec        0x0 build/sync.o
 .bss           0x00000000c00081ec        0x2 build/thread.o
 .bss           0x00000000c00081ee        0x0 build/list.o
 .bss           0x00000000c00081ee        0x0 build/timer.o
 *fill*         0x00000000c00081ee       0x12 
 .bss           0x00000000c0008200      0x408 build/interrupt.o
 .bss           0x00000000c0008608        0x0 build/memory.o
 .bss           0x00000000c0008608        0x0 build/bitmap.o
 .bss           0x00000000c0008608        0x0 build/string.o
 .bss           0x00000000c0008608        0x0 build/debug.o
 *(COMMON)
 *fill*         0x00000000c0008608       0x18 
 COMMON         0x00000000c0008620       0x80 build/syscall-init.o
                0x00000000c0008620                syscall_table
 COMMON         0x00000000c00086a0       0x6c build/keyboard.o
                0x00000000c00086a0                kbd_buf
 COMMON         0x00000000c000870c       0x44 build/thread.o
                0x00000000c000870c                thread_ready_list
                0x00000000c000871c                thread_all_list
                0x00000000c000872c                idle_thread
                0x00000000c0008730                main_thread
                0x00000000c0008734                pid_lock
 COMMON         0x00000000c0008750        0x4 build/timer.o
                0x00000000c0008750                total_ticks
 *fill*         0x00000000c0008754        0xc 
 COMMON         0x00000000c0008760      0x424 build/interrupt.o
                0x00000000c0008760                intr_name
                0x00000000c0008980                idt_table
 *fill*         0x00000000c0008b84       0x1c 
 COMMON         0x00000000c0008ba0      0x12c build/memory.o
                0x00000000c0008ba0                k_block_desc
                0x00000000c0008c48                k_v_pool
                0x00000000c0008c60                k_p_pool
                0x00000000c0008ca0                u_p_pool
                0x00000000c0008ccc                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0008ccc                . = ALIGN (0x4)
                0x00000000c0008ccc                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0008ccc                . = ALIGN (0x4)
                0x00000000c0008ccc                _end = .
                0x00000000c0008ccc                PROVIDE (end, .)
                0x00000000c0008ccc                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 build/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 build/init.o
 .comment       0x0000000000000000       0x12 build/stdio.o
 .comment       0x0000000000000000       0x12 build/syscall-init.o
 .comment       0x0000000000000000       0x12 build/syscall.o
 .comment       0x0000000000000000       0x12 build/stdio-kernel.o
 .comment       0x0000000000000000       0x12 build/keyboard.o
 .comment       0x0000000000000000       0x12 build/ioqueue.o
 .comment       0x0000000000000000       0x12 build/process.o
 .comment       0x0000000000000000       0x12 build/console.o
 .comment       0x0000000000000000       0x12 build/tss.o
 .comment       0x0000000000000000       0x12 build/sync.o
 .comment       0x0000000000000000       0x12 build/thread.o
 .comment       0x0000000000000000       0x12 build/list.o
 .comment       0x0000000000000000       0x12 build/timer.o
 .comment       0x0000000000000000       0x12 build/interrupt.o
 .comment       0x0000000000000000       0x12 build/memory.o
 .comment       0x0000000000000000       0x12 build/bitmap.o
 .comment       0x0000000000000000       0x12 build/string.o
 .comment       0x0000000000000000       0x12 build/debug.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
